def dechaveador(key:str = '', ciphertext:str = ''):
    if not key:
        raise ValueError("Coloque uma chave valída")
    if not ciphertext:
        raise ValueError("Coloque um ciphertext valído")

    lol_seed = int(key[0:3])
    index = 3

    seed_l = int(key[index: index + lol_seed])
    seed_passes = []
    
    for n in range(0, seed_l):
        seed_passes.append(key[index + 1:index + 64])
        index += 64
    index += 1

    lol_salt = int(key[index:index + 3])
    index += 3

    salt_l = int(key[index:index + lol_salt])
    index += lol_salt
    posicoes = []
    
    for n in range(0, salt_l):
        pn = int(key[index:index + 3])
        posicoes.append(key[index + 3:index + 3 + pn])
        index += 3 + pn

    lol_p = int(key[index:index + 3])
    index += 3

    pl = int(key[index:index + lol_p])
    index += lol_p
    passes = []
    
    for n in range(0, pl):
        passes.append(int(key[index:index + 3]))
        index += 3
    
    sl = int(key[index:index + 3])
    index += 3

    seed = int(index)


ci
    #'110010100110110000000111111001101101000011010101'
key = "001624480342386983982187484711423658998087621789360728794914703245962448034238698398218748471142365899808762178936072879491471324633244803423869839821874847114236589980876217893607287949147232470324480342386983982187484711423658998087621789360728794914733246642448034238698398218748471142365899808762178936072879491474324581244803423869839821874847114236589980876217893607287949147532460800221001400170015001900150012001700180021300130021600180016002160017002150017002210022200190022200227042079092083149110099174141061029164123121113155027181054173147191136169077065184064244803423869839821874847114236589980876217893607287949147032455415"


cha = dechaveador(key, ci)
        # Exemplo:"002-24 001-1 001-3 001-7 001-3 001-7 001-1 001-2 002-12 001-8 001-9 002-11 002-16 002-12 001-7 002-20 002-12 002-20 002-17 002-13 002-14 002-18 002-18 001-5 001-8 _=_ 002-30 061 080 130 147 079 065 160 195 036 159 088 196 153 177 085 065 057 177 146 121 113 104 184 024 078 045 085 030 034 076 _=_ 064-2509287300694305833771093373207689575137158924819762071042279593 _=_ 99999"

""" print("salt_leng: ", cha[0])
print(" ")
print("posicoes: ", cha[1])
print(" ")
print("passes_leng: ", cha[2])
print(" ")
print("passes: ", cha[3])
print(" ")
print("seed: ", cha[4])
print(" ")
print("padding: ", cha[5])
print(" ")
print("index: ", cha[6])
print(" ")
print("cipher_list: ", cha[7])
print(" ") """