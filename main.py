# --- Imports ---
from input_colectors import InputCollector
from HashChainClass import HashChainEncryption

# Global use.
Collector: InputCollector = InputCollector
HashChain: HashChainEncryption = HashChainEncryption()

# Will handle user input, function calls and the interface (WiP).
def main():
    t
    k = '20022500120011001300100017001500100014001600160021400214002140014001400211001400212001400219001800170010001500100023056025744754436456767559585987712226330546154784456688640520393265572630859191606141582028606410609400282155025873550516494545778645830144356587316617412054593' 
    HashChain.decrypt_(t, k)
    
# Runs main the function if the "main.py" file is directly executed.
if __name__ == "__main__":
    main()